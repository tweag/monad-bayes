---
name: "nix-build"

on:
  pull_request:
  push:
    branches:
      - master

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup Nix Environment
        uses: ./.github/actions/nix-common-setup
        with:
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Lint
        run: nix --print-build-logs build .#pre-commit

  build:
    needs: lint
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            system: x86_64-linux
          - os: macos-latest
            system: x86_64-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup Nix Environment
        uses: ./.github/actions/nix-common-setup
        with:
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Build
        run: nix --print-build-logs build .#packages.${{ matrix.system }}.monad-bayes
      - name: Development environment (package only)
        run: nix --print-build-logs develop .#packages.${{ matrix.system }}.monad-bayes --command echo Ready

  build-all-ghcs:
    needs: lint
    strategy:
      matrix:
        ghc: ["ghc94", "ghc96", "ghc98", "ghc910"]
        include:
          - os: ubuntu-latest
            system: x86_64-linux
          - os: macos-latest
            system: x86_64-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup Nix Environment
        uses: ./.github/actions/nix-common-setup
        with:
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Build
        run: nix --print-build-logs build .#packages.${{ matrix.system }}.monad-bayes-per-ghc.${{ matrix.ghc }}
      - name: Development environment (package only)
        run: nix --print-build-logs develop .#packages.${{ matrix.system }}.monad-bayes-per-ghc.${{ matrix.ghc }} --command echo Ready

  notebooks:
    needs:
      - build
      - build-all-ghcs
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            system: x86_64-linux
          # Jupyenv doesn't support Darwin yet, https://github.com/tweag/jupyenv/issues/388
          # - os: macos-latest
          #   system: x86_64-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup Nix Environment
        uses: ./.github/actions/nix-common-setup
        with:
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Development environment (complete)
        run: nix --print-build-logs develop --command echo Ready
      - name: Check whether notebook *.html files are up to date
        run: |
          ./regenerate_notebooks.sh
          git diff --exit-code || (echo "Please update notebooks by running regenerate_notebooks.sh, and inspecting and committing the result." && exit 1)
